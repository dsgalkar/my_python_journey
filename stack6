class stack:
    def __init__(self,size):
        self.n=size
        self.top=-1         #-1 is the index of empty stack
        self.s=[0]*size
    def isEmpty(self):
        if self.top==-1:
            return True
        else:
            return False
    def isFull(self):
        if self.top==n-1:
            return True
        else:
            return False
    def push(self,x):
        if isFull():
            print("stack is full")
        else:
            self.top +=1
            self.s[self.top]=x
    def pop(self):
        if isEmpty():
            print("stack is empty")
        else:
            p=self.s[self.top]
            print("the element",p,"is poped")
            self.top-=1
    def peek(self):
        if isEmpty():
            print("stack is full")
        else:
            print(self.s[self.top])
            
s1=[5]*n   
s1.stack(5)
while True:
    print("1:push")
    print("2:pop")
    print("3:peek")
    c,d=map(int,input().split())
    choice=int(input("enter the operation choice : "))
    
    if choice==1:
        a=int(input("enter the element : "))
        s1.push(a)
    elif choice==2: 
        p=s1.pop()
    elif choice==3: 
        s1.peek()
    else: 
        print("Invalid Input")
        exit()